(function() {
    var l = function(f, p) {
        return function() {
            return f.apply(p, arguments);
        };
    };
    window.D2LAdventureEngine || (window.D2LAdventureEngine = {});
    window.D2LAdventureEngine.venture = void 0;
    window.D2LAdventureEngine.ShutdownCalled = !1;
    window.D2LAdventureEngine._masterLoadQueue = void 0;
    window.D2LAdventureEngine.CallEndPhase5 = void 0;
    window.D2LAdventureEngine.CallProgPhase5 = void 0;
    window.D2LAdventureEngine._IE_preloadCompatFixer = [];
    window.D2LAdventureEngine._initPhase = 1;
    window.D2LAdventureEngine._complier = void 0;
    window.D2LAdventureEngine._audioManifest = void 0;
    window.D2LAdventureEngine._numOfAudioFiles = void 0;
    window.D2LAdventureEngine._audioLoadProxy = void 0;
    window.D2LAdventureEngine._assetPos = void 0;
    window.D2LAdventureEngine._AssetList = void 0;
    window.D2LAdventureEngine._preloadArray = void 0;
    window.D2LAdventureEngine._totalLoaded = void 0;
    window.D2LAdventureEngine.Shutdown = function() {
        return (window.D2LAdventureEngine.ShutdownCalled = !0);
    };
    window.D2LAdventureEngine.BeginAdventure = function(f, p, c, b, a) {
        var e, u, k, t, g, v, w, x, n, m, l, y, q, z, A, r;
        null == a &&
            (a = {
                expanded: !1,
                disableScaling: !1,
                ignoreAudio: !1,
                useLanguageCode: "EN",
                onCanvasLoadMessage: void 0,
                screenReaderAccessible: !0,
                disableAccessCursor: !1,
                useValanceAuthentication: void 0,
                jsonTags: {},
            });
        void 0 === b && (b = "unamedAdventure");
        void 0 === a.expanded && (a.expanded = !1);
        a.useLanguageCode =
            void 0 === a.useLanguageCode ? "EN" : a.useLanguageCode.toUpperCase();
        "EN" === a.useLanguageCode ||
            "FR" === a.useLanguageCode ||
            "ES" === a.useLanguageCode ?
            (D2LAdventureEngine.gu_LanguageSet = a.useLanguageCode) :
            "object" === typeof console &&
            (console.log(
                    "ERROR!! Requested Language code " +
                    a.useLanguageCode +
                    " is not supported in the Adventure Engine at this time. Ensure code is ISO 639-1 standard. Using 'EN' as default."
                ),
                (D2LAdventureEngine.gu_LanguageSet = "EN"));
        D2LAdventureEngine.disableScaling =
            void 0 === a.disableScaling ? !1 : a.disableScaling;
        D2LAdventureEngine.gu_ingoreAudio =
            void 0 === a.ignoreAudio ? !1 : a.ignoreAudio;
        void 0 === a.screenReaderAccessible && (a.screenReaderAccessible = !0);
        D2LAdventureEngine.gu_AccessCursorDisabled =
            void 0 === a.disableAccessCursor ? !1 : a.disableAccessCursor;
        D2LAdventureEngine.gu_ScreenReaderAccessible = a.screenReaderAccessible;
        D2LAdventureEngine.gu_EngineLoc = p;
        D2LAdventureEngine.gu_ExFileManager =
            new D2LAdventureEngine.ExternalFileManager();
        D2LAdventureEngine.gu_usingValence =
            void 0 !== a.useValanceAuthentication ? !0 : !1;
        D2LAdventureEngine.gu_CustomJsonTags =
            void 0 !== a.jsonTags ? a.jsonTags : {};
        D2LAdventureEngine.gu_fpsCap = void 0 !== a.fpsCap ? a.fpsCap : 60;
        p = (function(h) {
            return function(d) {
                var h, b;
                h = D2LAdventureEngine.onPostLangLoad;
                void 0 !== h && h.constructor === Function && h();
                try {
                    D2LAdventureEngine.gu_LanguageData = JSON.parse(d);
                } catch (e) {
                    "object" === typeof console &&
                        (console.log(
                                "ERROR, Language data failed to load, please check JSON in lang directory"
                            ),
                            console.log(e));
                }
                a.screenReaderAccessible ||
                    ((d = document.createElement("p")),
                        d.setAttribute("id", "AE_AccessNotAvWarning"),
                        d.setAttribute(
                            "style",
                            "position: absolute; left: -10000px; top: auto; width: 1px; height: 1px; overflow: hidden;"
                        ),
                        d.setAttribute("role", "alert"),
                        d.setAttribute("aria-live", "assertive"),
                        (h = document.createTextNode(
                            D2LAdventureEngine.gu_LanguageData.ScreenReader.disabledWarning
                        )),
                        d.appendChild(h),
                        document.body.appendChild(d));
                d = document.createElement("div");
                d.setAttribute("id", "AdventureLoading_Wrapper");
                d.innerHTML =
                    void 0 === a.onCanvasLoadMessage ?
                    "<strong aria-hidden='true'>" +
                    D2LAdventureEngine.gu_LanguageData.preloading.loadingMessage +
                    "<strong>" :
                    a.onCanvasLoadMessage;
                d.setAttribute("style", "width: 300 px;");
                document
                    .getElementById(f)
                    .parentNode.insertBefore(
                        d,
                        document.getElementById(f).previousSibling
                    );
                window.D2LAdventureEngine._preloadArray = [];
                window.D2LAdventureEngine._totalLoaded = 0;
                c.constructor !== String ?
                    ((c = JSON.parse(JSON.stringify(c))),
                        (D2LAdventureEngine.gu_initData = c)) :
                    (D2LAdventureEngine.gu_DataLoc = c);
                D2LAdventureEngine.gu_TouchAllowed = "ontouchstart" in window ? !0 : !1;
                d = navigator.userAgent; -
                1 !== d.indexOf("Edge/") ?
                    ((window.D2LAdventureEngine.gu_userBrowser = "IE"), (b = 12)) :
                    -1 !== d.indexOf("Chrome") ?
                    ((window.D2LAdventureEngine.gu_userBrowser = "Chrome"),
                        (b = navigator.appVersion.slice(
                            navigator.appVersion.indexOf("Chrome") + 7,
                            navigator.appVersion.indexOf(
                                ";",
                                navigator.appVersion.indexOf("Chrome") + 7
                            )
                        ))) :
                    -1 !== d.indexOf("Firefox") ?
                    ((window.D2LAdventureEngine.gu_userBrowser = "Firefox"),
                        (b = navigator.appVersion.slice(
                            navigator.appVersion.indexOf("Firefox") + 9,
                            navigator.appVersion.indexOf(
                                ";",
                                navigator.appVersion.indexOf("Firefox") + 9
                            )
                        ))) :
                    -1 !== d.indexOf("MSIE") ?
                    ((window.D2LAdventureEngine.gu_userBrowser = "IE"),
                        (b = document.documentMode),
                        9 > parseFloat(b) && y()) :
                    -1 !== d.indexOf("Trident/") ?
                    ((window.D2LAdventureEngine.gu_userBrowser = "IE"), (b = 11)) :
                    -1 !== d.indexOf("Safari") ?
                    ((window.D2LAdventureEngine.gu_userBrowser = "Safari"),
                        (b = navigator.appVersion.slice(
                            navigator.appVersion.indexOf("Version/") + 8,
                            navigator.appVersion.indexOf(
                                " ",
                                navigator.appVersion.indexOf("Version/") + 7
                            )
                        ))) :
                    -1 !== d.indexOf("Opera") &&
                    ((window.D2LAdventureEngine.gu_userBrowser = "Opera"),
                        (b = navigator.appVersion.slice(
                            navigator.appVersion.indexOf("Opera") + 6,
                            navigator.appVersion.indexOf(
                                ";",
                                navigator.appVersion.indexOf("Opera") + 6
                            )
                        )));
                void 0 === b && (b = navigator.appVersion);
                window.D2LAdventureEngine.gu_userBrowserVersion = b; -
                1 !== d.indexOf("Android") ?
                    ((window.D2LAdventureEngine.gu_userDevice = "Android"),
                        (window.D2LAdventureEngine.gu_mobileDevice = !0)) :
                    -1 !== d.indexOf("iPhone") ?
                    ((window.D2LAdventureEngine.gu_userDevice = "iPhone"),
                        (window.D2LAdventureEngine.gu_mobileDevice = !0)) :
                    -1 !== d.indexOf("iPad") ?
                    ((window.D2LAdventureEngine.gu_userDevice = "iPad"),
                        (window.D2LAdventureEngine.gu_mobileDevice = !0)) :
                    -1 !== d.indexOf("iPod") ?
                    ((window.D2LAdventureEngine.gu_userDevice = "iPod"),
                        (window.D2LAdventureEngine.gu_mobileDevice = !0)) :
                    -1 !== d.indexOf("BlackBerry") ?
                    ((window.D2LAdventureEngine.gu_userDevice = "BlackBerry"),
                        (window.D2LAdventureEngine.gu_mobileDevice = !0)) :
                    -1 !== d.indexOf("Windows Phone") ?
                    ((window.D2LAdventureEngine.gu_userDevice = "Windows Phone"),
                        (window.D2LAdventureEngine.gu_mobileDevice = !0)) :
                    ((window.D2LAdventureEngine.gu_userDevice = navigator.platform),
                        (window.D2LAdventureEngine.gu_mobileDevice = !1));
                window.D2LAdventureEngine.gu_userBrowserVersion = b;
                "object" === typeof console &&
                    (console.log("navigator.platform = " + navigator.platform),
                        console.log("navigator.userAgent = " + d),
                        console.log("browser = " + window.D2LAdventureEngine.gu_userBrowser),
                        console.log("device = " + window.D2LAdventureEngine.gu_userDevice),
                        console.log("mobile = " + window.D2LAdventureEngine.gu_mobileDevice),
                        console.log(
                            "Language code set to " + D2LAdventureEngine.gu_LanguageSet
                        ));
                window.D2LAdventureEngine._assetPos = 0;
                window.D2LAdventureEngine._AssetList = [];
                window.D2LAdventureEngine._AssetList = a.expanded ?
                    [D2LAdventureEngine.gu_EngineLoc + "/jsSrc/Cogs/createjs.js"] :
                    [D2LAdventureEngine.gu_EngineLoc + "/jsSrc/Cogs/createjs.min.js"];
                D2LAdventureEngine.gu_usingValence &&
                    ((b = [
                            D2LAdventureEngine.gu_EngineLoc + "/jsSrc/valence/sha.js",
                            D2LAdventureEngine.gu_EngineLoc + "/jsSrc/valence/valence.js",
                            D2LAdventureEngine.gu_EngineLoc +
                            "/jsSrc/valence/valence_helper.js",
                        ]),
                        (window.D2LAdventureEngine._AssetList =
                            window.D2LAdventureEngine._AssetList.concat(b)));
                return l();
            };
        })(this);
        D2LAdventureEngine.gu_ExFileManager.getDataFile(
            window.D2LAdventureEngine.gu_EngineLoc +
            "/data/lang/AE_LANG_" +
            D2LAdventureEngine.gu_LanguageSet +
            ".txt",
            p,
            (function(a) {
                return function(d) {
                    if ("object" === typeof console)
                        return (
                            console.log("Failed to load:" + d.statusText), console.log(d)
                        );
                };
            })(this)
        );
        y = (function(a) {
            return function() {
                var d;
                d = document.createElement("section");
                d.setAttribute("id", "AE_compatErrorMessage");
                d.setAttribute(
                    "style",
                    "padding:10px; width:800px; background-color:#FFFD00; border:Red thick solid;"
                );
                d.setAttribute("role", "alert");
                d.setAttribute("aria-live", "assertive");
                d.innerHTML =
                    "<h2 id='AEcompatErrorMessage_Title'>ERROR!</h2><p>Your browser is not capable of running the canvas content on this page, please update to the newest available version of Internet Explorer, Chrome, Firefox, or contact your system administrator and request an upgrade.</p>";
                return document.body.appendChild(d);
            };
        })(this);
        e = (function(h) {
            return function() {
                var d, h;
                h = function(d) {
                    return D2LAdventureEngine.gu_ExFileManager.getScript(
                        D2LAdventureEngine.gu_ExFileManager._externalLibaries[
                            window.D2LAdventureEngine._assetPos
                        ],
                        function(a) {
                            window.D2LAdventureEngine._assetPos++;
                            return window.D2LAdventureEngine._assetPos >
                                D2LAdventureEngine.gu_ExFileManager._externalLibaries.length - 1 ?
                                d() :
                                h(d);
                        },
                        function(a) {
                            "object" === typeof console &&
                                (console.log("External library failed to load:" + a.statusText),
                                    console.log(a));
                            window.D2LAdventureEngine._assetPos++;
                            return window.D2LAdventureEngine._assetPos >
                                D2LAdventureEngine.gu_ExFileManager._externalLibaries.length - 1 ?
                                d() :
                                h(d);
                        }
                    );
                };
                d = function() {
                    a.expanded ?
                        (window.D2LAdventureEngine._preloadArray.push({
                                src: window.D2LAdventureEngine.gu_EngineLoc +
                                    "/jsSrc/Cogs/appCog.js",
                                id: "file_appCogs",
                            }),
                            window.D2LAdventureEngine._preloadArray.push({
                                src: window.D2LAdventureEngine.gu_EngineLoc +
                                    "/jsSrc/Cogs/compCog.js",
                                id: "file_compCogs",
                            })) :
                        (window.D2LAdventureEngine._preloadArray.push({
                                src: window.D2LAdventureEngine.gu_EngineLoc +
                                    "/jsSrc/Cogs/appCog.min.js",
                                id: "file_appCogs",
                            }),
                            window.D2LAdventureEngine._preloadArray.push({
                                src: window.D2LAdventureEngine.gu_EngineLoc +
                                    "/jsSrc/Cogs/compCog.min.js",
                                id: "file_compCogs",
                            }));
                    return "IE" === window.D2LAdventureEngine.gu_userBrowser &&
                        "complete" !== document.readyState ?
                        (document.onreadystatechange = function(d) {
                            if ("complete" === document.readyState)
                                return n(window.D2LAdventureEngine._preloadArray);
                        }) :
                        n(window.D2LAdventureEngine._preloadArray);
                };
                return 0 !==
                    D2LAdventureEngine.gu_ExFileManager._externalLibaries.length ?
                    h(d) :
                    d();
            };
        })(this);
        l = (function(a) {
            return function() {
                return D2LAdventureEngine.gu_ExFileManager.getScript(
                    window.D2LAdventureEngine._AssetList[
                        window.D2LAdventureEngine._assetPos
                    ],
                    function() {
                        window.D2LAdventureEngine._assetPos++;
                        return window.D2LAdventureEngine._assetPos >
                            window.D2LAdventureEngine._AssetList.length - 1 ?
                            ((window.D2LAdventureEngine._assetPos = 0),
                                (a._complier =
                                    new window.D2LAdventureEngine.AdventureCompiler()),
                                a._complier.CompileJSON(e)) :
                            l();
                    },
                    function(d) {
                        if ("object" === typeof console)
                            return (
                                console.log(
                                    "ERROR!! Internal library failed to load:" + d.statusText
                                ),
                                console.log(d)
                            );
                    }
                );
            };
        })(this);
        t = (function(h) {
            return function() {
                var d, e;
                h._initPhase++;
                e = function() {
                    void 0 !== window.D2LAdventureEngine.gu_debugManager ?
                        window.D2LAdventureEngine.gu_debugManager.log(
                            "now preloading Phase " + h._initPhase
                        ) :
                        "object" === typeof console &&
                        console.log("now preloading Phase " + h._initPhase);
                    if (void 0 !== window.D2LAdventureEngine[b]) {
                        window.D2LAdventureEngine[b] = new D2LAdventureEngine.Adventure(f);
                        h.venture = window.D2LAdventureEngine[b];
                        h.venture._name = b.valueOf();
                        window.D2LAdventureEngine.Shutdown = h.venture.Shutdown;
                        if (window.D2LAdventureEngine.ShutdownCalled)
                            return alert("AE Error, adventure " + b + " was not available");
                        document
                            .getElementById(f)
                            .parentNode.removeChild(
                                document.getElementById("AdventureLoading_Wrapper")
                            );
                        void 0 !== h._complier.compData ?
                            ((h.venture.compData = h._complier.compData),
                                (h.venture.onSplashCompletion = h._complier.onSplashCompletion),
                                (h.venture.DefindedVarDat = h._complier.GlobalVars),
                                void 0 !== h._complier.useSplashID &&
                                (h.venture.useSplashID = h._complier.useSplashID),
                                h.venture.CreateSplashes(h._complier.SplashData)) :
                            alert(
                                "CRITICAL ERROR!! compData was corrupt or missing from JSON compile data"
                            );
                        D2LAdventureEngine.gu_DataManager =
                            void 0 !== h._complier.ProjectData.SaveDataID ?
                            new D2LAdventureEngine.dataManager(
                                h._complier.ProjectData.SaveDataID
                            ) :
                            new D2LAdventureEngine.dataManager("D2LAdventureEngine_" + b);
                        window.D2LAdventureEngine.gu_CustomFunctionsManager.SetGlobalFunctions(
                            h._complier.GlobalFuncData
                        );
                        window.D2LAdventureEngine.gu_TweensManager.SetGlobalTweens(
                            h._complier.GlobalTweenData
                        );
                        window.D2LAdventureEngine.gu_KeyManager._initGlobalKeyData =
                            h._complier.KeyMappingData;
                        window.D2LAdventureEngine.gu_GUIManager.initGloWinDat =
                            h._complier.GlobalWinData;
                        window.D2LAdventureEngine.gu_GUIManager.initUI_CompData =
                            h._complier.UI_Components;
                        window.D2LAdventureEngine.gu_GUIManager.UI_Options =
                            h._complier.UI_Options;
                        window.D2LAdventureEngine.gu_QuizManager._QuizInitData =
                            h._complier.GlobalQuizes;
                        window.D2LAdventureEngine.gu_QuizManager._QuizOptions =
                            h._complier.GlobalQuizOptions;
                        window.D2LAdventureEngine.gu_SpeechBubbleDefaults =
                            h._complier.GlobalSpeechBubbleOptions;
                        h.venture.preLoadingPhase();
                        return D2LAdventureEngine.gu_usingValence ?
                            (a.useValanceAuthentication.orgUnitID &&
                                (D2LAdventureEngine.gu_DataManager._OrgUnitID =
                                    a.useValanceAuthentication.orgUnitID),
                                void 0 !== h._complier.ProjectData.SavedKeys &&
                                D2LAdventureEngine.gu_DataManager.SetValKeys(
                                    h._complier.ProjectData.SavedKeys
                                ),
                                D2LAdventureEngine.gu_DataManager.AuthenticateValance(
                                    a.useValanceAuthentication,
                                    function(d) {
                                        if ("Error" !== d)
                                            return D2LAdventureEngine.gu_DataManager.SyncData(m);
                                        D2LAdventureEngine.gu_debugManager.log(
                                            "ERROR: Valanace Sync Error"
                                        );
                                        return m();
                                    }
                                )) :
                            m();
                    }
                    return window.D2LAdventureEngine.Shutdown();
                };
                d = D2LAdventureEngine.onPreloadPhase2;
                return void 0 !== d && d.constructor === Function ? d(e) : e();
            };
        })(this);
        g = (function(a) {
            return function() {
                var d;
                a._initPhase++;
                window.D2LAdventureEngine._preloadArray = a._complier.P3preloadRequest;
                d = D2LAdventureEngine.onPreloadPhase3;
                void 0 !== d &&
                    (d.constructor === Function ?
                        d() :
                        d.constructor === String &&
                        D2LAdventureEngine.gu_CustomFunctionsManager.CallGlobalFunc(d));
                return 0 !== window.D2LAdventureEngine._preloadArray.length ?
                    n(window.D2LAdventureEngine._preloadArray) :
                    m();
            };
        })(this);
        v = (function(a) {
            return function() {
                var d, b;
                b = window.D2LAdventureEngine.gu_SpriteAssets;
                window.D2LAdventureEngine.gu_SpriteAssets = [];
                for (d = window.D2LAdventureEngine._totalLoaded = 0; d < b.length;)
                    window.D2LAdventureEngine.gu_SpriteAssets.push(
                        new window.D2LAdventureEngine.SpriteDataObject(b[d].obj, b[d].title)
                    ),
                    d++;
                d = D2LAdventureEngine.venture.compData.onPreloadPhase4;
                void 0 !== d &&
                    (d.constructor === Function ?
                        d() :
                        d.constructor === String &&
                        D2LAdventureEngine.gu_CustomFunctionsManager.CallGlobalFunc(d));
                a._initPhase++;
                if (D2LAdventureEngine.gu_ingoreAudio)
                    return (
                        void 0 !== D2LAdventureEngine.gu_debugManager ?
                        D2LAdventureEngine.gu_debugManager.log(
                            "skipping audio load phase as requested in ignoreAudio option"
                        ) :
                        "object" === typeof console &&
                        console.log(
                            "skipping audio load phase as requested in ignoreAudio option"
                        ),
                        m()
                    );
                window.D2LAdventureEngine._preloadArray = a._complier.P4preloadRequest;
                return x(window.D2LAdventureEngine._preloadArray);
            };
        })(this);
        w = (function(a) {
            return function() {
                var d;
                a._initPhase++;
                window.D2LAdventureEngine._preloadArray = a._complier.P5preloadRequest;
                if ((d = D2LAdventureEngine.onPreloadPhase5)) {
                    if (
                        ((window.D2LAdventureEngine.CallEndPhase5 = m),
                            (window.D2LAdventureEngine.CallProgPhase5 = r),
                            void 0 !== d)
                    ) {
                        if (d.constructor === Function) return d();
                        if (d.constructor === String)
                            return D2LAdventureEngine.gu_CustomFunctionsManager.CallGlobalFunc(
                                d
                            );
                    }
                } else m();
            };
        })(this);
        u = (function(a) {
            return function() {
                window.D2LAdventureEngine._IE_preloadCompatFixer = void 0;
                window.D2LAdventureEngine._initPhase = void 0;
                window.D2LAdventureEngine._complier = void 0;
                window.D2LAdventureEngine._audioManifest = void 0;
                window.D2LAdventureEngine._numOfAudioFiles = void 0;
                window.D2LAdventureEngine._audioLoadProxy = void 0;
                window.D2LAdventureEngine._assetPos = void 0;
                window.D2LAdventureEngine._AssetList = void 0;
                window.D2LAdventureEngine._preloadArray = void 0;
                window.D2LAdventureEngine._totalLoaded = void 0;
                window.D2LAdventureEngine.CallEndPhase5 = void 0;
                return a.venture.preInit();
            };
        })(this);
        n = (function(a) {
            return function(d) {
                window.D2LAdventureEngine._totalLoaded = 0;
                void 0 !== window.D2LAdventureEngine.gu_debugManager ?
                    window.D2LAdventureEngine.gu_debugManager.log(
                        "now preloading Phase " + a._initPhase
                    ) :
                    "object" === typeof console &&
                    console.log("now preloading Phase " + a._initPhase);
                createjs.LoadQueue.loadTimeout = 6e4;
                window.D2LAdventureEngine._masterLoadQueue = new createjs.LoadQueue(!1);
                window.D2LAdventureEngine._masterLoadQueue.addEventListener(
                    "progress",
                    r
                );
                window.D2LAdventureEngine._masterLoadQueue.addEventListener(
                    "fileload",
                    A
                );
                window.D2LAdventureEngine._masterLoadQueue.addEventListener("error", z);
                return window.D2LAdventureEngine._masterLoadQueue.loadManifest(d);
            };
        })(this);
        (function(a) {
            return function(d, a, b, h, e) {
                var c;
                c = new XMLHttpRequest();
                try {
                    c.open("HEAD", d, !1);
                    c.send();
                    if (404 !== c.status && 0 !== c.status) return a(b);
                    r();
                    return h(e);
                } catch (g) {
                    return h(e);
                }
            };
        })(this);
        x = (function(a) {
            return function(d) {
                a._audioManifest = d;
                a._numOfAudioFiles = d.length;
                window.D2LAdventureEngine._totalLoaded = 0;
                (
                    "IE" === D2LAdventureEngine.gu_userBrowser ?
                    createjs.Sound.registerPlugins([createjs.HTMLAudioPlugin]) :
                    createjs.Sound.registerPlugins([
                        createjs.WebAudioPlugin,
                        createjs.HTMLAudioPlugin,
                    ])
                ) ?
                a._audioManifest[window.D2LAdventureEngine._totalLoaded].isBase64 ?
                    q(a._audioManifest[window.D2LAdventureEngine._totalLoaded]) :
                    ((a._audioLoadProxy = createjs.proxy(q, a)),
                        createjs.Sound.addEventListener("fileload", a._audioLoadProxy),
                        createjs.Sound.addEventListener("fileerror", function(a) {
                            D2LAdventureEngine.gu_debugManager.log("Audio fileerror");
                            D2LAdventureEngine.gu_debugManager.log(a);
                            a.target.id ? q(a.target) : q(a);
                        }),
                        (createjs.Sound.alternateExtensions =
                            D2LAdventureEngine.gu_AudioOptions.formats),
                        createjs.Sound.registerSound(
                            a._audioManifest[window.D2LAdventureEngine._totalLoaded]
                        ) ||
                        D2LAdventureEngine.gu_debugManager.log(
                            "registerSound failed for " +
                            a._audioManifest[window.D2LAdventureEngine._totalLoaded]
                            .src +
                            " Browser may not be capable of running current extensions"
                        )): (D2LAdventureEngine.gu_debugManager.log("SoundJS Plugin Error!"),
                        alert("SoundJS Plugin Error!"),
                        m());
            };
        })(this);
        q = (function(a) {
            return function(d) {
                var b;
                d &&
                    ((b = a._audioManifest[window.D2LAdventureEngine._totalLoaded]),
                        (d.looping = b.looping),
                        (d.channel = b.channel),
                        a._audioManifest[window.D2LAdventureEngine._totalLoaded].isBase64 ?
                        D2LAdventureEngine.gu_SoundManager.AddSoundEncodedData(
                            a._audioManifest[window.D2LAdventureEngine._totalLoaded]
                        ) :
                        (createjs.Sound.removeEventListener(
                                "fileload",
                                a._audioLoadProxy
                            ),
                            D2LAdventureEngine.gu_SoundManager.AddSoundData(d)));
                window.D2LAdventureEngine._totalLoaded++;
                r({ data: window.D2LAdventureEngine._totalLoaded });
                if (window.D2LAdventureEngine._totalLoaded === a._numOfAudioFiles)
                    return m();
                b = !1;
                for (d = 0; d < window.D2LAdventureEngine._totalLoaded;)
                    a._audioManifest[d].src ===
                    a._audioManifest[window.D2LAdventureEngine._totalLoaded].src &&
                    (b = !0),
                    d++;
                if (
                    a._audioManifest[window.D2LAdventureEngine._totalLoaded].isBase64 ||
                    b
                )
                    return q(a._audioManifest[window.D2LAdventureEngine._totalLoaded]);
                createjs.Sound.addEventListener("fileload", a._audioLoadProxy);
                if (!createjs.Sound.registerSound(
                        a._audioManifest[window.D2LAdventureEngine._totalLoaded]
                    ))
                    return D2LAdventureEngine.gu_debugManager.log(
                        "registerSound failed for " +
                        a._audioManifest[window.D2LAdventureEngine._totalLoaded].src +
                        " Browser may not be capable of running current extensions"
                    );
            };
        })(this);
        z = (function(a) {
            return function(a) {
                var b;
                b = !1;
                void 0 !== D2LAdventureEngine.gu_debugManager ?
                    a.id ?
                    D2LAdventureEngine.gu_debugManager.log(
                        "Error detected, an item has failed to load " + a.id
                    ) :
                    a.item ?
                    D2LAdventureEngine.gu_debugManager.log(
                        "Error detected, an item has failed to load " + a.item.id
                    ) :
                    a.data ?
                    (D2LAdventureEngine.gu_debugManager.log(
                            "Error detected, an item has failed to load " + a.data.id
                        ),
                        "file_appCogs" === a.data.id && (b = !0)) :
                    D2LAdventureEngine.gu_debugManager.log(
                        "Error detected, an item has failed to load unidentified item"
                    ) :
                    "object" === typeof console &&
                    (a.id ?
                        console.log(
                            "Error!! detected, an item has failed to load " + a.id
                        ) :
                        a.item ?
                        console.log(
                            "Error detected, an item has failed to load " + a.item.id
                        ) :
                        a.data ?
                        (console.log(
                                "Error detected, an item has failed to load " + a.data.id
                            ),
                            "file_appCogs" === a.data.id && (b = !0)) :
                        console.log(
                            "Error detected, an item has failed to load unidentified item"
                        ));
                if (b) return alert("critical File Fail. unable to load AppCog");
                window.D2LAdventureEngine._totalLoaded++;
                if (
                    window.D2LAdventureEngine._totalLoaded ===
                    window.D2LAdventureEngine._preloadArray.length
                )
                    return m();
            };
        })(this);
        r = (function(a) {
            return function(d) {
                var b, e, c, g;
                if (void 0 !== a.venture && void 0 !== a.venture.preloadProgressBar)
                    return (
                        (e = a.venture.preloadProgressBar),
                        (c = a.venture.preloadProgressText),
                        (g = a.venture.splash._options.useTextOptions),
                        void 0 === g && (g = {}),
                        3 === a._initPhase ?
                        ((b = 100 * d.loaded),
                            void 0 === b && (b = 100 * d.progress),
                            (d = 1),
                            D2LAdventureEngine.gu_ingoreAudio || d++,
                            D2LAdventureEngine.onPreloadPhase5 && d++,
                            (b /= d),
                            e.fillTo(b)) :
                        4 === a._initPhase ?
                        ((b = 50),
                            D2LAdventureEngine.onPreloadPhase5 && (b = 25),
                            (b = ((d.data / a._numOfAudioFiles) * 100) / 2 + b),
                            e.fillTo(b)) :
                        5 === a._initPhase && ((b = d / 4 + 75), e.fillTo(b)),
                        100 <= b && 5 === a._initPhase ?
                        window.D2LAdventureEngine.gu_TouchAllowed ?
                        g.mobileLoadedMessage ?
                        (c.text = g.mobileLoadedMessage) :
                        g.loadedMessage ?
                        (c.text = g.loadedMessage) :
                        (c.text = "Tap to Continue") :
                        g.loadedMessage ?
                        (c.text = g.loadedMessage) :
                        (c.text = "Click, or press space, to Continue") :
                        void 0 === g.loadingMessage ?
                        (c.text = Math.round(b) + "%") :
                        -1 !== g.loadingMessage.indexOf("[percentage]") ?
                        g.loadingMessage.replace("[percentage]", Math.round(b) + "%") :
                        g.loadingMessage
                    );
            };
        })(this);
        k = (function(a) {
            return function(a) {
                var b, c;
                if ("IE" === window.D2LAdventureEngine.gu_userBrowser) {
                    c = 0;
                    for (b = !1; c < D2LAdventureEngine._IE_preloadCompatFixer.length;)
                        D2LAdventureEngine._IE_preloadCompatFixer[c] === a.id && (b = !0),
                        c++;
                    if (b) return !1;
                    D2LAdventureEngine._IE_preloadCompatFixer.push(a.id);
                }
                return !0;
            };
        })(this);
        m = (function(a) {
            return function() {
                if (1 === a._initPhase) return t();
                if (2 === a._initPhase) return g();
                if (3 === a._initPhase) return v();
                if (4 === a._initPhase) return w();
                if (5 === a._initPhase) return u();
            };
        })(this);
        return (A = (function(a) {
            return function(a) {
                var b, c, e;
                b = a.item;
                window.D2LAdventureEngine._totalLoaded++;
                switch (b.type) {
                    case createjs.Types.JAVASCRIPT:
                    case createjs.Types.XML:
                    case createjs.Types.JSON:
                    case createjs.Types.TEXT:
                        b.type === createjs.Types.JAVASCRIPT ?
                            ((c = document.createElement("script")),
                                c.setAttribute("type", "text/javascript"),
                                (c.src = b.src),
                                document.head.appendChild(c)) :
                            ".svg" === b.src.substr(b.src.length - 4) ?
                            window.D2LAdventureEngine.gu_SvgAssets.push(a) :
                            ((e = { id: a.item.id, data: a.result }),
                                window.D2LAdventureEngine.gu_DataAssets.push(e));
                        window.D2LAdventureEngine._totalLoaded ===
                            window.D2LAdventureEngine._preloadArray.length &&
                            (b.type === createjs.Types.JAVASCRIPT ?
                                ("IE" === window.D2LAdventureEngine.gu_userBrowser &&
                                    ("complete" === c.readyState || "loaded" === c.readyState ?
                                        k(a.item) && m() :
                                        (a.result.onreadystatechange = function(b) {
                                            if (
                                                ("complete" === b.target.readyState ||
                                                    "loaded" === b.target.readyState) &&
                                                k(a.item)
                                            )
                                                return m();
                                        })),
                                    (c.onload = function() {
                                        if (k(a.item)) return m();
                                    })) :
                                k(a.item) && m());
                        break;
                    case createjs.Types.IMAGE:
                        window.D2LAdventureEngine._preloadArray ?
                            (a.callback = function(b) {
                                var c;
                                if (
                                    window.D2LAdventureEngine._totalLoaded ===
                                    window.D2LAdventureEngine._preloadArray.length
                                )
                                    return (
                                        (c = new Image()),
                                        (c.crossOrigin = "anonymous"),
                                        (c.src = b.item.src),
                                        (c.onload = m),
                                        (a.result = c)
                                    );
                            }) :
                            a.item.callback && (a.callback = a.item.callback),
                            D2LAdventureEngine.gu_ResourceManager._BitmapsManager.HandleLoadedResources(
                                a
                            );
                }
            };
        })(this));
    };
    window.D2LAdventureEngine.ExternalFileManager = (function() {
        function f() {
            this.getDataFile = l(this.getDataFile, this);
            this.getScript = l(this.getScript, this);
        }
        f.prototype._externalLibaries = [];
        f.prototype._externalStlyes = [];
        f.prototype.getScript = function(f, c, b) {
            var a, e;
            e = document.createElement("script");
            a = document.getElementsByTagName("script")[0];
            e.async = 1;
            a.parentNode.insertBefore(e, a);
            e.onload = e.onreadystatechange = function(a, f) {
                if (f || !e.readyState || /loaded|complete/.test(e.readyState))
                    (e.onload = e.onreadystatechange = null),
                    (e = void 0),
                    f ? b && b(a) : c && c(a);
            };
            e.src = f;
        };
        f.prototype.getDataFile = function(f, c, b) {
            var a;
            a = new XMLHttpRequest();
            a.open("GET", f, !0);
            a.onload = function(e) {
                200 <= a.status && 400 > a.status ?
                    ((e = a.responseText), c && c(e)) :
                    b && b(e);
            };
            a.onerror = function(a) {
                b && b(a);
            };
            a.send();
        };
        return f;
    })();
    window.D2LAdventureEngine.AdventureCompiler = (function() {
        function f() {
            this.SetResourceManifest = l(this.SetResourceManifest, this);
            this.addToResoucePool = l(this.addToResoucePool, this);
            this.parseSubCommand = l(this.parseSubCommand, this);
            this.getCustomData = l(this.getCustomData, this);
            this.HandleAssetDataRdy = l(this.HandleAssetDataRdy, this);
            this.HandleAssetError = l(this.HandleAssetError, this);
            this.parseLinkedFiles = l(this.parseLinkedFiles, this);
            this.CompileJSON = l(this.CompileJSON, this);
            this.P3preloadRequest = [];
            this.P4preloadRequest = [];
            this._SpriteDataObjs = [];
            this._prePreObjs = [];
        }
        var p;
        f.prototype._completionCall = void 0;
        f.prototype._defaultJSONData = void 0;
        f.prototype._JSONData = void 0;
        f.prototype.P3preloadRequest = void 0;
        f.prototype.P4preloadRequest = void 0;
        f.prototype._SpriteDataObjs = void 0;
        f.prototype._prePreObjs = void 0;
        f.prototype.ProjectData = void 0;
        f.prototype.KeyMappingData = void 0;
        f.prototype.GlobalFuncData = void 0;
        f.prototype.GlobalTweenData = void 0;
        f.prototype.GlobalWinData = void 0;
        f.prototype.GlobalQuizOptions = void 0;
        f.prototype.GlobalQuizes = void 0;
        f.prototype.UI_Components = void 0;
        f.prototype.compData = void 0;
        p = function(c, b, a) {
            var e;
            e = new XMLHttpRequest();
            e.open("GET", c, !0);
            e.onload = function(c) {
                var f;
                if (200 <= e.status && 400 > e.status)
                    try {
                        (f = JSON.parse(e.responseText)), b && b(f);
                    } catch (t) {
                        (c = t), a && a(c);
                    }
                else a && a(c);
            };
            e.onerror = function(b) {
                a && a(b);
            };
            e.send();
        };
        f.prototype.CompileJSON = function(c) {
            this._completionCall = c;
            return p(
                window.D2LAdventureEngine.gu_EngineLoc + "/data/AE_DefaultAssets.txt",
                (function(b) {
                    return function(a) {
                        return b.parseLinkedFiles(a, b.getCustomData);
                    };
                })(this),
                (function(b) {
                    return function(a) {
                        return b.HandleAssetError(a);
                    };
                })(this)
            );
        };
        f.prototype.parseLinkedFiles = function(c, b) {
            var a, e, f, k;
            e = (function(a) {
                return function(a) {
                    var b, c, f, n;
                    n = Object.keys(D2LAdventureEngine.gu_CustomJsonTags);
                    c = 0;
                    for (f = n.length; c < f; c++) {
                        b = n[c];
                        if (b === D2LAdventureEngine.gu_CustomJsonTags[b]) {
                            alert(
                                "ERROR! custom tag " + b + " was set as same value as its key"
                            );
                            break;
                        } -
                        1 !== a.indexOf(b) &&
                            ((a = a.replace(b, D2LAdventureEngine.gu_CustomJsonTags[b])),
                                (a = e(a)));
                    }
                    return a;
                };
            })(this);
            a = (function(a) {
                return function(a) {
                    var b, c, e, f, k, l;
                    b = function(a) {
                        var c, e, f, g, h, d, k, n;
                        g = D2LAdventureEngine.gu_LanguageData;
                        h = "";
                        c = 0;
                        for (e = a.length; c < e; c++)
                            (f = a[c]), (g = g[f]), (h = "" === h ? f : h + "." + f);
                        if (g.constructor === String) l("[%LANG " + h + "]", g);
                        else if (g.constructor === Object)
                            for (k = Object.keys(g), c = 0, e = k.length; c < e; c++) {
                                n = k[c];
                                h = [];
                                g = 0;
                                for (f = a.length; g < f; g++)(d = a[g]), h.push(d.valueOf());
                                h.push(n);
                                b(h);
                            }
                    };
                    l = function(b, c) {
                        -1 !== a.indexOf(b) && ((a = a.replace(b, c)), l(b, c));
                    };
                    l("[%LANGCODE]", D2LAdventureEngine.gu_LanguageSet);
                    k = Object.keys(D2LAdventureEngine.gu_LanguageData);
                    c = 0;
                    for (f = k.length; c < f; c++)
                        (e = k[c]),
                        D2LAdventureEngine.gu_LanguageData[e].constructor === String ?
                        l("[%LANG " + e + "]", D2LAdventureEngine.gu_LanguageData[e]) :
                        D2LAdventureEngine.gu_LanguageData[e].constructor ===
                        Object && b([e]);
                    return a;
                };
            })(this);
            k = e(JSON.stringify(c));
            k = a(k);
            return -1 !== k.indexOf("[%externalJSON('") && -1 !== k.indexOf("')]") ?
                ((f = this.parseSubCommand(k, "[%externalJSON('", "')]")),
                    p(
                        f,
                        (function(a) {
                            return function(c) {
                                k = k.replace(
                                    "\"[%externalJSON('" + f + "')]\"",
                                    e(JSON.stringify(c))
                                );
                                return a.parseLinkedFiles(JSON.parse(k), b);
                            };
                        })(this),
                        (function(a) {
                            return function(c) {
                                alert("ERROR! failed to retrive externalJSON at path " + f);
                                k = k.replace("[%externalJSON('" + f + "')]", "{}");
                                return a.parseLinkedFiles(JSON.parse(k), b);
                            };
                        })(this)
                    )) :
                b(JSON.parse(k));
        };
        f.prototype.HandleAssetError = function(c) {
            alert("JSON LOAD ERROR");
            if ("object" === typeof console) return console.log(c);
        };
        f.prototype.HandleAssetDataRdy = function(c) {
            var b, a;
            "object" === typeof console && console.log("JSON Data Received");
            this._JSONData = c;
            this.compData = c.CompData;
            void 0 === this._JSONData.GlobalKeyMapData &&
                (this._JSONData.GlobalKeyMapData = {});
            this._JSONData.GlobalKeyMapData.ActiveKeys =
                void 0 !== this._JSONData.GlobalKeyMapData.ActiveKeys ?
                this._JSONData.GlobalKeyMapData.ActiveKeys.concat(
                    this._defaultJSONData.GlobalKeyMapData.ActiveKeys
                ) :
                this._defaultJSONData.GlobalKeyMapData.ActiveKeys;
            this._JSONData.GlobalKeyMapData.InactiveKeys =
                void 0 !== this._JSONData.GlobalKeyMapData.InactiveKeys ?
                this._JSONData.GlobalKeyMapData.InactiveKeys.concat(
                    this._defaultJSONData.GlobalKeyMapData.InactiveKeys
                ) :
                this._defaultJSONData.GlobalKeyMapData.InactiveKeys;
            this._JSONData.Splash_Screens =
                void 0 !== this._JSONData.Splash_Screens ?
                this._defaultJSONData.Splash_Screens.concat(
                    this._JSONData.Splash_Screens
                ) :
                this._defaultJSONData.Splash_Screens;
            this._JSONData.GlobalFunctions =
                void 0 === this._JSONData.GlobalFunctions ?
                this._defaultJSONData.GlobalFunctions :
                this._JSONData.GlobalFunctions.concat(
                    this._defaultJSONData.GlobalFunctions
                );
            this._JSONData.GlobalTweens =
                void 0 === this._JSONData.GlobalTweens ?
                this._defaultJSONData.GlobalTweens :
                this._JSONData.GlobalTweens.concat(
                    this._defaultJSONData.GlobalTweens
                );
            this._JSONData.GlobalWindows =
                void 0 === this._JSONData.GlobalWindows ?
                this._defaultJSONData.GlobalWindows :
                this._JSONData.GlobalWindows.concat(
                    this._defaultJSONData.GlobalWindows
                );
            this._JSONData.UI_Components =
                void 0 === this._JSONData.UI_Components ?
                this._defaultJSONData.UI_Components :
                this._JSONData.UI_Components.concat(
                    this._defaultJSONData.UI_Components
                );
            this._JSONData.Quiz_Options =
                void 0 === this._JSONData.Quiz_Options ?
                this._defaultJSONData.Quiz_Options :
                this._JSONData.Quiz_Options.concat(
                    this._defaultJSONData.Quiz_Options
                );
            this._JSONData.GlobalSpeechBubbleOptions =
                void 0 === this._JSONData.GlobalSpeechBubbleOptions ?
                this._defaultJSONData.GlobalSpeechBubbleOptions :
                this._JSONData.GlobalSpeechBubbleOptions.concat(
                    this._defaultJSONData.GlobalSpeechBubbleOptions
                );
            this._JSONData.Quizes =
                void 0 === this._JSONData.Quizes ?
                this._defaultJSONData.Quizes :
                this._JSONData.Quizes.concat(this._defaultJSONData.Quizes);
            if (void 0 === this._JSONData.UI_Options)
                this._JSONData.UI_Options = this._defaultJSONData.UI_Options;
            else
                for (b = 0; b < Object.keys(this._defaultJSONData.UI_Options).length;)
                    (a =
                        this._JSONData.UI_Options[
                            Object.keys(this._defaultJSONData.UI_Options)[b]
                        ]),
                    void 0 === a &&
                    (this._JSONData.UI_Options[
                            Object.keys(this._defaultJSONData.UI_Options)[b]
                        ] =
                        this._defaultJSONData.UI_Options[
                            Object.keys(this._defaultJSONData.UI_Options)[b]
                        ]),
                    b++;
            void 0 !== this._JSONData.ProjectData.AdventureName ?
                (window.D2LAdventureEngine[this._JSONData.ProjectData.AdventureName] = {}) :
                (window.D2LAdventureEngine.unamedAdventure = {});
            this.SetResourceManifest(this._defaultJSONData);
            this.SetResourceManifest(this._JSONData);
            this.KeyMappingData = this._JSONData.GlobalKeyMapData;
            this.GlobalFuncData = this._JSONData.GlobalFunctions;
            this.GlobalTweenData = this._JSONData.GlobalTweens;
            this.GlobalWinData = this._JSONData.GlobalWindows;
            this.GlobalSpeechBubbleOptions = this._JSONData.GlobalSpeechBubbleOptions;
            this.GlobalQuizOptions = this._JSONData.Quiz_Options;
            this.GlobalQuizes = this._JSONData.Quizes;
            this.GlobalVars = this._JSONData.GlobalVars;
            this.UI_Components = this._JSONData.UI_Components;
            this.UI_Options = c.UI_Options;
            this.SplashData = c.Splash_Screens;
            this.useSplashID = c.CompData.useCustomSplash;
            this.onSplashCompletion = c.CompData.onSplashCompletion;
            this.ProjectData = c.ProjectData;
            return void 0 !== this._completionCall ?
                this._completionCall() :
                alert("ERROR: completionCall not defined");
        };
        f.prototype.getCustomData = function(c) {
            this._defaultJSONData = c;
            return void 0 !== window.D2LAdventureEngine.gu_DataLoc ?
                ((c = window.D2LAdventureEngine.gu_DataLoc),
                    p(
                        c,
                        (function(b) {
                            return function(a) {
                                return b.parseLinkedFiles(a, b.HandleAssetDataRdy);
                            };
                        })(this),
                        (function(b) {
                            return function(a) {
                                return b.HandleAssetError(a);
                            };
                        })(this)
                    )) :
                void 0 !== D2LAdventureEngine.gu_initData ?
                this.parseLinkedFiles(
                    D2LAdventureEngine.gu_initData,
                    this.HandleAssetDataRdy
                ) :
                alert("ERROR! Data not set on Adventure Start call!");
        };
        f.prototype.parseSubCommand = function(c, b, a) {
            var e, f;
            if (-1 !== c.indexOf(b) && -1 !== c.indexOf(a)) {
                e = c.indexOf(b) + b.length;
                f = c.slice(e, c.indexOf(a, e));
                if (-1 !== f.indexOf(b)) {
                    e = c.slice(c.indexOf(b) + b.length, c.length);
                    for (b = c = 0; - 1 !== e.indexOf("[%", b);)
                        (b = e.indexOf("]", e.indexOf("[%", b) + 2) + 1), c++;
                    a = e.slice(0, e.indexOf(a, b));
                } else a = c.slice(c.indexOf(b) + b.length, c.indexOf(a, e));
                return a;
            }
            return c;
        };
        f.prototype.addToResoucePool = function(c, b) {
            var a, e;
            if (c === this._prePreObjs) {
                e = 0;
                for (a = !1; e < c.length;)
                    b.AssetID === c[e].AssetID && ((a = !0), (c[e] = b)), e++;
                if (!a) return c.push(b);
            } else if (c === this._SpriteDataObjs) {
                e = 0;
                for (a = !1; e < c.length;)
                    b.obj.AssetID === c[e].obj.AssetID && ((a = !0), (c[e] = b)), e++;
                if (!a) return c.push(b);
            } else if (c === this.P3preloadRequest || c === this.P4preloadRequest) {
                e = 0;
                for (a = !1; e < c.length;)
                    b.id === c[e].id && ((a = !0), (c[e] = b)), e++;
                if (!a) return c.push(b);
            }
        };
        f.prototype.SetResourceManifest = function(c) {
            var b, a, e, f, k, l, g;
            f = (function(a) {
                return function(a) {
                    var b, c; -
                    1 !== a.indexOf("[%randNum") &&
                        -1 !== a.indexOf("]") &&
                        ((c = a.indexOf("[%randNum")),
                            (b = a.indexOf("]", c)),
                            (c = a.substr(c + 9, b - (c + 9))), -1 === c.indexOf(",") ?
                            console.log(
                                "ERROR [%rand#,#] found in src " +
                                a +
                                " was not formatted correctly."
                            ) :
                            ((c = c.split(",")),
                                (b = Math.round(
                                    Math.random() * (parseInt(c[1]) - parseInt(c[0])) +
                                    parseInt(c[0])
                                )),
                                (a = a.replace("[%randNum" + c.join(",") + "]", b))));
                    return a;
                };
            })(this);
            e = (function(a) {
                return function(a) {
                    var b; -
                    1 !== a.indexOf("[engLoc]") &&
                        (a = a.replace("[engLoc]", D2LAdventureEngine.gu_EngineLoc + "/")); -
                    1 !== a.indexOf("[default]") &&
                        ((b = g.defaultAssetLocation), -1 !== b.indexOf("[engLoc]") &&
                            (b = b.replace(
                                "[engLoc]",
                                D2LAdventureEngine.gu_EngineLoc + "/"
                            )),
                            (a = a.replace("[default]", b + "/")));
                    return f(a);
                };
            })(this);
            l = 0;
            for (k = []; l < Object.keys(c.AssetManagers).length;) {
                b = Object.keys(c.AssetManagers)[l];
                g = c.AssetManagers[b];
                if ("preloaderAssets" === b || "libaries" === b || "styleSheets" === b)
                    if (void 0 !== g.data)
                        for (a = 0; a < g.data.length;)
                            this.addToResoucePool(this._prePreObjs, g.data[a]), a++;
                    else {
                        if (g.assetSources)
                            if ("libaries" === b)
                                for (a = 0; a < g.assetSources.length;)
                                    D2LAdventureEngine.gu_ExFileManager._externalLibaries.push(
                                        e(g.assetSources[a])
                                    ),
                                    a++;
                            else if ("styleSheets" === b)
                            for (a = 0; a < g.assetSources.length;)
                                D2LAdventureEngine.gu_ExFileManager._externalStlyes.push(
                                    e(g.assetSources[a])
                                ),
                                a++;
                    }
                else if ("2" === g.preloadPhase || "audio" !== b) {
                    if (void 0 !== g.data)
                        for (a = 0; a < g.data.length;)
                            void 0 !== g.data[a].AssetLocation &&
                            ((g.data[a].AssetLocation = e(g.data[a].AssetLocation)),
                                void 0 !== g.data[a].spriteFrameData &&
                                this.addToResoucePool(this._SpriteDataObjs, {
                                    obj: g.data[a],
                                    title: b,
                                }),
                                this.addToResoucePool(this.P3preloadRequest, {
                                    id: g.data[a].AssetID,
                                    src: g.data[a].AssetLocation,
                                    subMan: b,
                                    crossOrigin: g.data[a].crossOrigin,
                                })),
                            a++;
                } else if (
                    ("3" === g.preloadPhase || "audio" === b) &&
                    void 0 !== g.data
                )
                    for (
                        g.formats || (g.formats = ["mp3"]),
                        window.D2LAdventureEngine.gu_AudioOptions = {
                            formats: g.formats,
                        },
                        a = 0; a < g.data.length;

                    )
                        (b = "none"),
                        (g.data[a].AssetLocation = e(g.data[a].AssetLocation)),
                        g.data[a].AssetLocation ?
                        ((b = g.data[a].AssetLocation + "." + g.formats[0]),
                            this.addToResoucePool(this.P4preloadRequest, {
                                id: g.data[a].AssetID,
                                src: b,
                                looping: g.data[a].looping,
                                channel: g.data[a].channel,
                            })) :
                        "object" === typeof console &&
                        console.log(
                            "SetResourceManifest found null src string " +
                            g.data[a].AssetID
                        ),
                        a++;
                l++;
                window.D2LAdventureEngine.gu_PreloadAssets = this._prePreObjs;
                k.push(
                    (window.D2LAdventureEngine.gu_SpriteAssets = this._SpriteDataObjs)
                );
            }
            return k;
        };
        return f;
    })();
}.call(this));